
package agenda;

import java.io.*;
import java.util.*;
import javax.swing.*;

public class DlgActivare extends javax.swing.JDialog {
    
    public DlgActivare(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtCod1 = new javax.swing.JTextField();
        btnOK = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        txtCod2 = new javax.swing.JTextField();
        txtCod3 = new javax.swing.JTextField();
        txtCod4 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Inregistrare");
        setResizable(false);

        jLabel1.setText("Introduceti Codul de Activare:");

        txtCod1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCod1KeyTyped(evt);
            }
        });

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        txtCod2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCod2KeyTyped(evt);
            }
        });

        txtCod3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCod3KeyTyped(evt);
            }
        });

        txtCod4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCod4KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtCod1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtCod2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCod3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCod4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnCancel)))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCod1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCod2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCod4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCod3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOK)
                    .addComponent(btnCancel))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        txtCod1.getAccessibleContext().setAccessibleName("txtCod1");
        btnOK.getAccessibleContext().setAccessibleName("btnOK");
        btnCancel.getAccessibleContext().setAccessibleName("btnCancel");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        String activationcode = txtCod1.getText() + txtCod2.getText() +
                txtCod3.getText() + txtCod4.getText();
        long lsn = Agenda.getInstance().generareCodLicenta(activationcode);
        Scanner reader = null;
        PrintWriter printer = null;
        try {
            reader = new Scanner(new File("agenda.lic"));
            String slic = reader.next();
            long llic = Long.parseLong(slic);            
            if (llic == lsn){
                Agenda.getInstance().setActivated(true);
                reader.close();
                printer = new PrintWriter(new FileWriter("agenda.lic"));
                printer.println(slic);
                printer.println(activationcode);
                printer.close();
                // Succes
                JOptionPane.showMessageDialog(null, "Aplicatia a fost activata cu succes!",
                        "Succes", JOptionPane.INFORMATION_MESSAGE);
                dispose();
            }
            else {
                // Esec
                JOptionPane.showMessageDialog(null, "Codul de activare nu este corect!",
                        "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Fisierul de licenta nu a fost gasit!",
                    "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtCod1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCod1KeyTyped
        evt.consume();
        String code = txtCod1.getText();
        char ch = evt.getKeyChar();
        if (Character.isLetter(ch) || Character.isDigit(ch)){
            if (code.length() < 4){
                ch = Character.toUpperCase(ch);   
                code = code + Character.toString(ch);
                txtCod1.setText(code);
            }
            if (code.length() >= 4) {
                txtCod2.setEnabled(true);
                txtCod2.grabFocus();
            }
        }
    }//GEN-LAST:event_txtCod1KeyTyped

    private void txtCod2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCod2KeyTyped
        evt.consume();
        String code = txtCod2.getText();
        char ch = evt.getKeyChar();
        if (Character.isLetter(ch) || Character.isDigit(ch)){
            if (code.length() < 4) {
                ch = Character.toUpperCase(ch);
                code = code + Character.toString(ch);
                txtCod2.setText(code);
            }
            if (code.length() >= 4) {
                txtCod3.setEnabled(true);
                txtCod3.grabFocus();
            }
        }
    }//GEN-LAST:event_txtCod2KeyTyped

    private void txtCod3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCod3KeyTyped
        evt.consume();
        String code = txtCod3.getText();
        char ch = evt.getKeyChar();
        if (Character.isLetter(ch) || Character.isDigit(ch)){
            if (code.length() < 4){
                ch = Character.toUpperCase(ch);   
                code = code + Character.toString(ch);
                txtCod3.setText(code);
            }
            if (code.length() >= 4) {
                txtCod4.setEnabled(true);
                txtCod4.grabFocus();
            }
        }        
    }//GEN-LAST:event_txtCod3KeyTyped

    private void txtCod4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCod4KeyTyped
        evt.consume();
        String code = txtCod4.getText();
        if (code.length() < 4) {
            char ch = evt.getKeyChar();
            if (Character.isLetter(ch) || Character.isDigit(ch)){
                ch = Character.toUpperCase(ch);   
                code = code + Character.toString(ch);
                txtCod4.setText(code);
            }
        }
    }//GEN-LAST:event_txtCod4KeyTyped
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField txtCod1;
    private javax.swing.JTextField txtCod2;
    private javax.swing.JTextField txtCod3;
    private javax.swing.JTextField txtCod4;
    // End of variables declaration//GEN-END:variables
}
