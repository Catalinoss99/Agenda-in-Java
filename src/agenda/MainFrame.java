
package agenda;

import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.*;
import java.sql.*;
import java.util.*;
import java.awt.*;
//import java.awt.Toolkit;
//import java.awt.Image;
//import java.awt.Dialog;
//import java.awt.Dimension;
//import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class MainFrame extends javax.swing.JFrame {  
    private FixedFilters fixedFilter = FixedFilters.NIMIC;
    private Ordonare ordonare = Ordonare.DUPA_NIMIC;
    String sqlurl = "";
    private String sfitrare = "";
    // Timer pentru salvare in baza de date
    private javax.swing.Timer timer;
    // Timer pentru reclame
    private javax.swing.Timer timer1;
    private int ixReclama = -1;
    ImageIcon icon0 = null;
    ImageIcon icon1 = null;
    ImageIcon icon2 = null;
    ImageIcon icon3 = null;
    ImageIcon icon4 = null;
    ///
    private final static int SIXTY_SECONDS = 60000;
    private final static int TWO_SECONDS = 2000;

    public MainFrame() {
        initComponents();
        timer = new javax.swing.Timer(SIXTY_SECONDS, new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                salvareBazaDeDate();
            } 
        });
        icon0 = new ImageIcon("Reclama0.png");
        icon1 = new ImageIcon("Reclama1.png");
        icon2 = new ImageIcon("Reclama2.png");
        icon3 = new ImageIcon("Reclama3.png");
        icon4 = new ImageIcon("Reclama4.png");
        timer1 = new javax.swing.Timer(TWO_SECONDS, new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                ixReclama = (ixReclama + 1) % 5;
                switch(ixReclama){
                    case 0:
                        lblReclame.setIcon(icon0);
                        break;
                        
                    case 1:
                        lblReclame.setIcon(icon1);
                        break;
                        
                    case 2:
                        lblReclame.setIcon(icon2);
                        break;                  

                        
                    case 3:
                        lblReclame.setIcon(icon3);
                        break;
                        
                    case 4:
                        lblReclame.setIcon(icon4);
                        break;
                }
            } 
        });
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnFiltreaza = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cmbFiltrare = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txtFiltru = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cmbOrdonare = new javax.swing.JComboBox<>();
        btnAdauga = new javax.swing.JButton();
        btnSterge = new javax.swing.JButton();
        btnEditeaza = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstContacts = new javax.swing.JList<>();
        lblReclame = new javax.swing.JLabel();
        mnuMainBar = new javax.swing.JMenuBar();
        mnuFisiere = new javax.swing.JMenu();
        miDeschidere = new javax.swing.JMenuItem();
        miSalvare = new javax.swing.JMenuItem();
        miIesire = new javax.swing.JMenuItem();
        mnuAjutor = new javax.swing.JMenu();
        miInreg = new javax.swing.JMenuItem();
        miDespre = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Agenda Contacte");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        btnFiltreaza.setText("Filtreaza");
        btnFiltreaza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltreazaActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Filtrare:");
        jLabel1.setName(""); // NOI18N

        cmbFiltrare.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nimic", "Numar Fix", "Numar Mobil", "Ziua de Nastere (azi)", "Luna de Nastere (curenta)" }));
        cmbFiltrare.setName("cmbFiltrare"); // NOI18N
        cmbFiltrare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFiltrareActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Filtru:");

        txtFiltru.setName("txtFiltru"); // NOI18N
        txtFiltru.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFiltruKeyPressed(evt);
            }
        });

        jLabel3.setText("Ordonare:");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        cmbOrdonare.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nimic", "Dupa Nume", "Dupa Prenume", "Dupa Data Nastere", " " }));
        cmbOrdonare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOrdonareActionPerformed(evt);
            }
        });

        btnAdauga.setText("Adauga Contact");
        btnAdauga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdaugaActionPerformed(evt);
            }
        });

        btnSterge.setText("Sterge Contact Selectat");
        btnSterge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStergeActionPerformed(evt);
            }
        });

        btnEditeaza.setText("Editeaza Contact Selectat");
        btnEditeaza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditeazaActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(lstContacts);
        lstContacts.getAccessibleContext().setAccessibleName("lstContacts");

        mnuFisiere.setText("Fisiere");

        miDeschidere.setText("Deschidere");
        miDeschidere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miDeschidereActionPerformed(evt);
            }
        });
        mnuFisiere.add(miDeschidere);
        miDeschidere.getAccessibleContext().setAccessibleName("miDeschidere");

        miSalvare.setText("Salvare");
        miSalvare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSalvareActionPerformed(evt);
            }
        });
        mnuFisiere.add(miSalvare);
        miSalvare.getAccessibleContext().setAccessibleName("miSalvare");

        miIesire.setText("Iesire");
        miIesire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miIesireActionPerformed(evt);
            }
        });
        mnuFisiere.add(miIesire);
        miIesire.getAccessibleContext().setAccessibleName("miIesire");

        mnuMainBar.add(mnuFisiere);
        mnuFisiere.getAccessibleContext().setAccessibleName("mnuFisiere");

        mnuAjutor.setText("Ajutor");

        miInreg.setText("Inregistrare");
        miInreg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miInregActionPerformed(evt);
            }
        });
        mnuAjutor.add(miInreg);
        miInreg.getAccessibleContext().setAccessibleName("miInreg");

        miDespre.setText("Despre");
        mnuAjutor.add(miDespre);
        miDespre.getAccessibleContext().setAccessibleName("miDespre");

        mnuMainBar.add(mnuAjutor);
        mnuAjutor.getAccessibleContext().setAccessibleName("mnuAjutor");

        setJMenuBar(mnuMainBar);
        mnuMainBar.getAccessibleContext().setAccessibleName("mnuMainBar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdauga, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSterge, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(btnEditeaza))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cmbFiltrare, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFiltru, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbOrdonare, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(29, 29, 29)
                        .addComponent(btnFiltreaza, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblReclame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbFiltrare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtFiltru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFiltreaza))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbOrdonare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdauga)
                    .addComponent(btnSterge)
                    .addComponent(btnEditeaza))
                .addGap(18, 18, 18)
                .addComponent(lblReclame, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        btnFiltreaza.getAccessibleContext().setAccessibleName("btnFiltreaza");
        cmbFiltrare.getAccessibleContext().setAccessibleName("cmbFiltreaza");
        txtFiltru.getAccessibleContext().setAccessibleName("txtFiltru");
        cmbOrdonare.getAccessibleContext().setAccessibleName("cmbOrdonare");
        btnAdauga.getAccessibleContext().setAccessibleName("btnAdauga");
        btnSterge.getAccessibleContext().setAccessibleName("btnSterge");
        btnEditeaza.getAccessibleContext().setAccessibleName("btnEditeaza");
        lblReclame.getAccessibleContext().setAccessibleName("lblReclame");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miIesireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miIesireActionPerformed
        int answer = JOptionPane.showConfirmDialog(this,"Are you sure?");  
        if(answer == JOptionPane.YES_OPTION){
            timer.stop();
            if (sqlurl.length() > 0)
                salvareBazaDeDate();
            System.exit(0);  
        }
    }//GEN-LAST:event_miIesireActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int answer = JOptionPane.showConfirmDialog(this,"Are you sure?");  
        if(answer == JOptionPane.YES_OPTION){
            this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            timer.stop();
            timer1.stop();
            if (sqlurl.length() > 0)
                salvareBazaDeDate();
        }
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        setVisible(true);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        boolean activated = false;
        Scanner reader = null;
        try {
            reader = new Scanner(new File("agenda.lic"));
            String slic = reader.next();
            String ssn = "";
            if (reader.hasNext()){
                ssn = reader.next();
            }
            if (ssn.length() == 16){
                long lsn = Agenda.getInstance().generareCodLicenta(ssn);
                long llic = Long.parseLong(slic);
                if (lsn == llic){
                    activated = true;
                }
            }
            reader.close();
        }
        catch (IOException e) {
            System.out.println("Fisierul de licenta nu a fost gasit.");
            e.printStackTrace();
        }
        Agenda.getInstance().setActivated(activated);
        if (activated){
            setareControaleLicensed();
            Rectangle rec = getBounds();
            rec.height -= 45;
            setBounds(rec);
        }
        else {
            setareControaleShareware();
            timer1.start();
        }
    }//GEN-LAST:event_formWindowOpened

    private void miDeschidereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miDeschidereActionPerformed
        JFileChooser fc = new JFileChooser();
        String currdir = System.getProperty("user.dir");
        File fdir = new File(currdir);
        fc.setCurrentDirectory(fdir);
        FileNameExtensionFilter dbfilter = new FileNameExtensionFilter("DB File","db");
        fc.setFileFilter(dbfilter);
        int res = fc.showOpenDialog(this);   
        if(res == JFileChooser.APPROVE_OPTION) {    
            File f = fc.getSelectedFile();
            String filepath = f.getPath();
            Connection conn = null;
            Statement stmt = null;
            try {
                // db parameters
                sqlurl = "jdbc:sqlite:" + filepath;
                // create a connection to the database
                conn = DriverManager.getConnection(sqlurl);
                System.out.println("Opened database successfully");
                conn.setAutoCommit(false);
                stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery("SELECT * FROM agenda;");
                Vector<String> vecdata = new Vector();
                Agenda.getInstance().clear();
                int id = 0;
                while (rs.next()) {
                    id = rs.getInt("ID");
                    String firstnane = rs.getString("firstnane");
                    String lastname = rs.getString("lastname");
                    String phoneno = rs.getString("phoneno");
                    String mob_fix = rs.getString("mob_fix");
                    String birthdate = rs.getString("birthdate");
                    Contact c = new Contact(id, firstnane, lastname, phoneno,
                            mob_fix, birthdate);
                    // Pune in agenda
                    Agenda.getInstance().addContact(c);
                    vecdata.add(c.toString());
                }
                Agenda.getInstance().setMaxId(id);
                rs.close();
                stmt.close();
                conn.close();
                lstContacts.setListData(vecdata);
                miSalvare.setEnabled(true);
                // Ziua de Nastere astazi
                vecdata = Agenda.getInstance().getBirthdateToday();
                if (vecdata.size() > 0){
                    DlgBirthdate dlg = new DlgBirthdate(this, vecdata, true);
                    dlg.setLocationRelativeTo(null);
                    dlg.setVisible(true);
                }
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
            finally {
                try {
                    if (stmt != null) {
                        stmt.close();
                    }
                    if (conn != null) {
                        conn.close();
                    }
                } catch (SQLException ex) {
                    System.out.println(ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_miDeschidereActionPerformed

    private void btnAdaugaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdaugaActionPerformed
        // modal dialog
        DlgAdauga dlg = new DlgAdauga(this, -1, true);
        dlg.setLocationRelativeTo(null);
        dlg.setVisible(true);
        if (Agenda.getInstance().isChanged()){
            Agenda.getInstance().setChanged(false);
            refresh();
        }
    }//GEN-LAST:event_btnAdaugaActionPerformed

    private void refresh(){
        Vector<String> vecdata = null;
        if (sfitrare.length() > 0){
            vecdata = Agenda.getInstance().filtrareUtilizator(sfitrare);
        } 
        else{
            vecdata = Agenda.getInstance().filtrareFixa(fixedFilter);
        }
        lstContacts.setListData(vecdata);
    }
    
    private void btnStergeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStergeActionPerformed
        String sel = lstContacts.getSelectedValue();
        if (sel != null){
            int ix = sel.indexOf(',');
            String sid = sel.substring(0, ix);
            int id = Integer.parseInt(sid);
            Contact c = Agenda.getInstance().getContact(id);
            String fullname = c.getFirstname() + " " + c.getLastname();
            // 0=yes, 1=no, 2=cancel
            int input = JOptionPane.showConfirmDialog(null,
                "Doriti sa stergeti contactul " + fullname + "?", "Selectati o Optiune...",
                JOptionPane.YES_NO_CANCEL_OPTION);
            if (input == 0) {
                if (Agenda.getInstance().remove(id)) {
                    refresh();
                }
            }
        }
    }//GEN-LAST:event_btnStergeActionPerformed

    private void btnEditeazaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditeazaActionPerformed
        String sel = lstContacts.getSelectedValue();
        if (sel != null){
            int ix = sel.indexOf(',');
            String sid = sel.substring(0, ix);
            int id = Integer.parseInt(sid);   
            DlgAdauga dlg = new DlgAdauga(this, id, true);
            dlg.setVisible(true);
            if (Agenda.getInstance().isChanged()){
                Agenda.getInstance().setChanged(false);
                refresh();
            }
        }
    }//GEN-LAST:event_btnEditeazaActionPerformed
    
    private void cmbFiltrareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFiltrareActionPerformed
        int ix = cmbFiltrare.getSelectedIndex();
        if (ix > -1){
            switch(ix){
            case 0:
                fixedFilter = FixedFilters.NIMIC;
                break;
            
            case 1:
                fixedFilter = FixedFilters.TELEFON_FIX;
                break;
                
            case 2:
                fixedFilter = FixedFilters.TELEFON_MOBIL;
                break;
                
            case 3:
                fixedFilter = FixedFilters.ZIUA_NASTERE;
                break;
                
            case 4:
                fixedFilter = FixedFilters.LUNA_NASTERE;
                break;
            }
            sfitrare = "";
            refresh();
        }
    }//GEN-LAST:event_cmbFiltrareActionPerformed

    private void btnFiltreazaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltreazaActionPerformed
        sfitrare = txtFiltru.getText();
        refresh();
    }//GEN-LAST:event_btnFiltreazaActionPerformed

    private void cmbOrdonareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOrdonareActionPerformed
        int ix = cmbOrdonare.getSelectedIndex();
        if (ix > -1){
            switch(ix){
            case 0:
                ordonare = Ordonare.DUPA_NIMIC;
                break;
            
            case 1:
                ordonare = Ordonare.DUPA_NUME;
                break;
                
            case 2:
                ordonare = Ordonare.DUPA_PRENUME;
                break;
                
            case 3:
                ordonare = Ordonare.DUPA_DATA_NASTERE;
                break;
            }
            Agenda.getInstance().sortare(ordonare);
            refresh();
        }    
    }//GEN-LAST:event_cmbOrdonareActionPerformed

    private void txtFiltruKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltruKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            btnFiltreazaActionPerformed(null);
        }
    }//GEN-LAST:event_txtFiltruKeyPressed

    private void salvareBazaDeDate(){
        java.util.List<Contact> lc = Agenda.getInstance().getContacts();
        int idmax = Agenda.getInstance().getMaxId();
        Connection conn = null;
        Statement stmt = null;
        try {
            conn = DriverManager.getConnection(sqlurl);
            stmt = conn.createStatement();
            String sql = "DELETE FROM agenda";
            stmt.executeUpdate(sql);
            for (int i = 0; i < lc.size(); i++) {
                sql = "INSERT INTO agenda VALUES (";
                Contact c = lc.get(i);
                sql += (i + 1) + ", '" + c.getFirstname() + "', '"
                        + c.getLastname() + "', '" + c.getPhoneno() + "', '"
                        + c.getMob_fix() + "', '" + c.getBirthdate() + "')";
                stmt.executeUpdate(sql);
            }
            stmt.close();
            conn.close();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }
    
    private void miSalvareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSalvareActionPerformed
        salvareBazaDeDate();
        if (!timer.isRunning())
            timer.start();
    }//GEN-LAST:event_miSalvareActionPerformed

    private void setareControaleShareware(){
        miDeschidere.setEnabled(false);
        miSalvare.setEnabled(false);
        miInreg.setEnabled(true);
    }
            
    private void setareControaleLicensed(){
        miDeschidere.setEnabled(true);
        miSalvare.setEnabled(sqlurl.length() > 0);
        miInreg.setEnabled(false);
    }
    
    private void miInregActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miInregActionPerformed
        // modal dialog
        DlgActivare dlg = new DlgActivare(this, true);
        dlg.setLocationRelativeTo(null);
        dlg.setVisible(true);
        if (Agenda.getInstance().isActivated()){
            setareControaleLicensed();
            timer1.stop();
            lblReclame.setIcon(null);
            Rectangle rec = getBounds();
            rec.height -= 45;
            setBounds(rec);
        }
    }//GEN-LAST:event_miInregActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
               }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        JWindow window = new JWindow();
        ImageIcon ii = new ImageIcon("Splash.png");
        window.getContentPane().add(
                new JLabel("", ii, SwingConstants.CENTER));        
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        double centerWidth = screenSize.getWidth()/2;
        double centerHeight = screenSize.getHeight()/2;
        window.setBounds(((int)screenSize.getWidth() - ii.getIconWidth())/2,
                ((int)screenSize.getHeight() - ii.getIconHeight())/2,
                ii.getIconWidth(), ii.getIconHeight());
        window.setVisible(true);
        try {
            Thread.sleep(4000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        window.setVisible(false);
        window.dispose();
        // Create and display the form
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdauga;
    private javax.swing.JButton btnEditeaza;
    private javax.swing.JButton btnFiltreaza;
    private javax.swing.JButton btnSterge;
    private javax.swing.JComboBox<String> cmbFiltrare;
    private javax.swing.JComboBox<String> cmbOrdonare;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblReclame;
    private javax.swing.JList<String> lstContacts;
    private javax.swing.JMenuItem miDeschidere;
    private javax.swing.JMenuItem miDespre;
    private javax.swing.JMenuItem miIesire;
    private javax.swing.JMenuItem miInreg;
    private javax.swing.JMenuItem miSalvare;
    private javax.swing.JMenu mnuAjutor;
    private javax.swing.JMenu mnuFisiere;
    private javax.swing.JMenuBar mnuMainBar;
    private javax.swing.JTextField txtFiltru;
    // End of variables declaration//GEN-END:variables
}

